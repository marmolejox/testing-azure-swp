/* 
    Author: Luis Guti√©rrez <lguiterrez@mstecs.com>
    Date: 12/05/2025

    Description:
    This CSS code is designed to style specific elements of a webpage. 
    It includes rules for layout, typography, colors, and other visual 
    aspects to enhance the user interface and user experience. 
    Ensure to test these styles across different browsers for compatibility.

 */

/* ==========================================================================
      Mandatory imports  
  =========================================================================== */

  @import url('./variable.css');
  @import url('./font.css');
  
/* ==========================================================================
          Custom styles
   ========================================================================== */
  
  @import url('./components/ctechs-header.css');
  @import url('./components/ctechs-hero.css');
  @import url('./components/ctechs-whoweare.css');
  @import url('./components/ctechs-ourbenefits.css');
  @import url('./components/ctechs-contactus.css');
  @import url('./components/ctechs-global.css');
  @import url('./components/ctechs-partners.css');
  @import url('./components/ctechs-partners-certifications.css');
  @import url('./components/ctechs-badges-certifications.css');
  @import url('./components/ctechs-services.css');
  @import url('./components/decorative-divider.css');
  @import url('./components/ctechs-footer.css');


  @import url('./components/mstecs-header.css');
  @import url('./components/mstecs-hero.css');
  @import url('./components/mstecs-partners.css');
  @import url('./components/mstecs-licensing.css');
  @import url('./components/mstecs-services.css');
  @import url('./components/mstecs-allies.css');
  @import url('./components/mstecs-features.css');
  @import url('./components/mstecs-azure.css');
  @import url('./components/mstecs-footer.css');

  @import url('./components/bubble.css');
  @import url('./components/scroll.css');
  @import url('./components/bubble-buttons.css');


/* ==========================================================================
      Base styles: opinionated defaults
  =========================================================================== */

html {
  color: #222;
  font-size: 1em;
  line-height: 1.4;
  overflow-x: hidden;
}

*, *::before, *::after {
  box-sizing: border-box; /* Modelo de caja consistente */
}


body {
  margin: 0;
  padding: 0;
  width: 100%;
  min-height: 100vh;
  overflow-x: hidden; /* Seguridad adicional */
  position: relative;
  flex-direction: column;
  align-items: center; /* Centrado horizontal general */
}


/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #ffffff;
  text-shadow: none;
}

::selection {
  background: #ffffff;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}


/* ==========================================================================
          Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visually-hidden {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
 * Extends the .visually-hidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * The use of `table` rather than `block` is only necessary if using
 * `::before` to contain the top-margins of child elements.
 */

.clearfix::before,
.clearfix::after {
  content: "";
  display: table;
}

.clearfix::after {
  clear: both;
}

/* ==========================================================================
      EXAMPLE Media Queries for Responsive Design.
      These examples override the primary ('mobile first') styles.
      Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
(-webkit-min-device-pixel-ratio: 1.25),
(min-resolution: 1.25dppx),
(min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
      Print styles.
      Inlined to avoid the additional HTTP request:
      https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {

  *,
  *::before,
  *::after {
    background: #fff !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]::after {
    content: " (" attr(href) ")";
  }

  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}